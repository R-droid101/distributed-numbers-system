apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.auth.secretName }}
                  key: {{ .Values.secrets.auth.tokenKey }}
            - name: DB_HOST
              value: {{ .Values.db.host }}
            - name: DB_PORT
              value: "{{ .Values.db.port }}"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.db.secretName }}
                  key: {{ .Values.secrets.db.usernameKey }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.db.secretName }}
                  key: {{ .Values.secrets.db.passwordKey }}
            - name: DB_NAME
              value: {{ .Values.db.name }}
            - name: REDIS_ADDR
              value: {{ .Values.redis.host }}
          

